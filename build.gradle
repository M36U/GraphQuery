plugins {
    id "maven-publish"
    id "java"
}

group = package_group
archivesBaseName = app_name
version = "${version}"

allprojects {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

jar {
    classifier = ''
    manifest.mainAttributes(
            "Built-By": System.getProperty('user.name'),
            "Created-By": "${System.getProperty('java.vm.version')} + (${System.getProperty('java.vm.vendor')})",
            "Implementation-Title": project.name,
            "Implementation-Version": project.version
    )
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        if (project.hasProperty('maven_repo')) {
            maven {
                url maven_repo
                credentials {
                    username project.hasProperty('maven_username') ? maven_username : ''
                    password project.hasProperty('maven_password') ? maven_password : ''
                }
            }
        } else {
            mavenLocal()
        }
    }
}

tasks.build.mustRunAfter(clean)
tasks.build.dependsOn(sourcesJar, javadocJar)
